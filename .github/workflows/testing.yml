# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Testing with Gauge

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  DB_CONNECTION_STRING: "mysql+pymysql://test_user:test_pass@localhost:33306/test_db"
  HASH_SALT: "tru3_h45h_541t"

permissions:
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest

    services:
      mariadb:
        image: mysql:lts
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: test_db
          MYSQL_USER: test_user
          MYSQL_PASSWORD: test_pass
        ports:
          - 33306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=5s --health-timeout=2s --health-retries=3

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v3
        with:
          python-version: "3.x"

      - name: Install Gauge
        run: |
          curl -SsL https://downloads.gauge.org/stable | sh

      - name: Install Dependencies
        run: |
          pip install -r requirements.txt
          pip install cryptography
          gauge install python
          pip install -r testing/requirements.txt

      - name: Verify MariaDB connection
        run: |
          while ! mysqladmin ping -h "127.0.0.1" -P 33306 --silent; do
            sleep 1
          done  

      - name: Start FastAPI Service
        run: |
          cd app
          nohup uvicorn main:app --host 0.0.0.0 --port 3000 &
          sleep 10

      - name: Init Database Tables
        run: |
          cd app
          python db_init.py

      - name: Wait for FastAPI to be Ready
        run: |
          echo "Waiting for FastAPI..."
          until curl -sSf http://localhost:3000/docs; do
            echo "FastAPI is not ready yet..."
            sleep 5
          done
          echo "FastAPI is up!"

      - name: Run Gauge Tests
        run: gauge run testing/specs/login.spec

      - name: Stop FastAPI server
        run: |
          kill $(lsof -t -i:3000)

      - name: ðŸ“¤ Upload Gauge Reports (on failure)
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: gauge-reports
          path: reports/html-report
